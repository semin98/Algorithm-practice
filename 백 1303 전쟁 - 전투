from collections import deque

def bfs(si, sj):
    global cnt_B, cnt_W
    cnt = 1
    q = deque()
    v[si][sj] = 1
    color = arr[si][sj]
    q.append((si, sj))

    while q:
        ci, cj = q.popleft()

        for di, dj in ((-1, 0), (1, 0), (0, -1), (0, 1)):
            ni, nj = ci + di, cj + dj
            if 0 <= ni < M and 0 <= nj < N and v[ni][nj] == 0 and arr[ni][nj] == color:
                v[ni][nj] = 1
                q.append((ni, nj))
                cnt += 1

    if color == 'B':
        cnt_B += cnt ** 2
    else:
        cnt_W += cnt ** 2


N, M = map(int, input().split())

arr = [list(map(str, input())) for _ in range(M)]
v = [[0] * N for _ in range(M)]
cnt_B = 0
cnt_W = 0

for i in range(M):
    for j in range(N):
        if v[i][j] == 0:
            bfs(i, j)

print(f'{cnt_W} {cnt_B}')
